# import * from './generated/prisma.graphql'

type Query {
  user(id: ID!): User
  users: [User!]!
  image(where: ImageWhereInput): Image
  images(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, first: Int): [Image!]!
  product(where: ProductWhereInput): Product
  products(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, first: Int): [Product!]!
  productVariant(where: ProductVariantWhereUniqueInput!): ProductVariant
  productVariants(where: ProductVariantWhereInput, orderBy: ProductOrderByInput, skip: Int, first: Int): [ProductVariant]!
}

type Mutation {
  createUser(name: String!, email: String!, password: String!): User!
  deleteImage(id: ID!): Image
  createProductWithImage(department: String!, title: String!, description: String!, category: String, brand: String, online: Boolean!, cloudinary_id: String!, name: String!, height: Int!, width: Int!, transformation: String!, image_url: String!, large_image_url: String!): Product!
  updateProductWithImage(id: ID!, department: String!, title: String!, description: String!, category: String, brand: String, online: Boolean!, cloudinary_id: String!, name: String!, height: Int!, width: Int!, transformation: String!, image_url: String!, large_image_url: String!): Product!
  deleteProduct(id: ID!): Product
  createProductVariant(price: Float!, quantity: Int!, color: String, sale: Boolean!, salePrice: Float, size: String, productId: String!): ProductVariant!
  updateProductVariant(id: ID!, price: Float!, quantity: Int!, color: String, sale: Boolean!, salePrice: Float, size: String): ProductVariant!
  deleteProductVariant(id: ID!): ProductVariant
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
}
